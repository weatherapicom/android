/**
 * Weather API
 * # Introduction WeatherAPI.com provides access to weather and geo data via a JSON/XML restful API. It allows developers to create desktop, web and mobile applications using this data very easy. We provide following data through our API:     - Real-time weather - 14 day weather forecast - Historical Weather - Marine Weather and Tide Data - Future Weather (Upto 365 days ahead) - Daily and hourly intervals - 15 min interval (Enterprise only) - Astronomy - Time zone - Location data - Sports - Search or Autocomplete API - Weather Alerts - Air Quality Data - Bulk Request  # Getting Started    You need to [signup](https://www.weatherapi.com/signup.aspx) and then you can find your API key under [your account](https://www.weatherapi.com/login.aspx), and start using API right away!  Try our weather API by using interactive [API Explorer](https://www.weatherapi.com/api-explorer.aspx).  We also have SDK for popular framework/languages available on [Github](https://github.com/weatherapicom/) for quick integrations.  If you find any features missing or have any suggestions, please [contact us](https://www.weatherapi.com/contact.aspx).    # Authentication    API access to the data is protected by an API key. If at anytime, you find the API key has become vulnerable, please regenerate the key using Regenerate button next to the API key.    Authentication to the WeatherAPI.com API is provided by passing your API key as request parameter through an API .      ##  key parameter  key=YOUR API KEY  
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.CurrentAirQuality;
import io.swagger.client.model.CurrentCondition;
import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Current {
  
  @SerializedName("last_updated_epoch")
  private Integer lastUpdatedEpoch = null;
  @SerializedName("last_updated")
  private String lastUpdated = null;
  @SerializedName("temp_c")
  private BigDecimal tempC = null;
  @SerializedName("temp_f")
  private BigDecimal tempF = null;
  @SerializedName("is_day")
  private Integer isDay = null;
  @SerializedName("condition")
  private CurrentCondition condition = null;
  @SerializedName("wind_mph")
  private BigDecimal windMph = null;
  @SerializedName("wind_kph")
  private BigDecimal windKph = null;
  @SerializedName("wind_degree")
  private BigDecimal windDegree = null;
  @SerializedName("wind_dir")
  private String windDir = null;
  @SerializedName("pressure_mb")
  private BigDecimal pressureMb = null;
  @SerializedName("pressure_in")
  private BigDecimal pressureIn = null;
  @SerializedName("precip_mm")
  private BigDecimal precipMm = null;
  @SerializedName("precip_in")
  private BigDecimal precipIn = null;
  @SerializedName("humidity")
  private BigDecimal humidity = null;
  @SerializedName("cloud")
  private BigDecimal cloud = null;
  @SerializedName("feelslike_c")
  private BigDecimal feelslikeC = null;
  @SerializedName("feelslike_f")
  private BigDecimal feelslikeF = null;
  @SerializedName("vis_km")
  private BigDecimal visKm = null;
  @SerializedName("vis_miles")
  private BigDecimal visMiles = null;
  @SerializedName("uv")
  private Integer uv = null;
  @SerializedName("gust_mph")
  private BigDecimal gustMph = null;
  @SerializedName("gust_kph")
  private BigDecimal gustKph = null;
  @SerializedName("air_quality")
  private CurrentAirQuality airQuality = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getLastUpdatedEpoch() {
    return lastUpdatedEpoch;
  }
  public void setLastUpdatedEpoch(Integer lastUpdatedEpoch) {
    this.lastUpdatedEpoch = lastUpdatedEpoch;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getLastUpdated() {
    return lastUpdated;
  }
  public void setLastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getTempC() {
    return tempC;
  }
  public void setTempC(BigDecimal tempC) {
    this.tempC = tempC;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getTempF() {
    return tempF;
  }
  public void setTempF(BigDecimal tempF) {
    this.tempF = tempF;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getIsDay() {
    return isDay;
  }
  public void setIsDay(Integer isDay) {
    this.isDay = isDay;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CurrentCondition getCondition() {
    return condition;
  }
  public void setCondition(CurrentCondition condition) {
    this.condition = condition;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getWindMph() {
    return windMph;
  }
  public void setWindMph(BigDecimal windMph) {
    this.windMph = windMph;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getWindKph() {
    return windKph;
  }
  public void setWindKph(BigDecimal windKph) {
    this.windKph = windKph;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getWindDegree() {
    return windDegree;
  }
  public void setWindDegree(BigDecimal windDegree) {
    this.windDegree = windDegree;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getWindDir() {
    return windDir;
  }
  public void setWindDir(String windDir) {
    this.windDir = windDir;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getPressureMb() {
    return pressureMb;
  }
  public void setPressureMb(BigDecimal pressureMb) {
    this.pressureMb = pressureMb;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getPressureIn() {
    return pressureIn;
  }
  public void setPressureIn(BigDecimal pressureIn) {
    this.pressureIn = pressureIn;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getPrecipMm() {
    return precipMm;
  }
  public void setPrecipMm(BigDecimal precipMm) {
    this.precipMm = precipMm;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getPrecipIn() {
    return precipIn;
  }
  public void setPrecipIn(BigDecimal precipIn) {
    this.precipIn = precipIn;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getHumidity() {
    return humidity;
  }
  public void setHumidity(BigDecimal humidity) {
    this.humidity = humidity;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getCloud() {
    return cloud;
  }
  public void setCloud(BigDecimal cloud) {
    this.cloud = cloud;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getFeelslikeC() {
    return feelslikeC;
  }
  public void setFeelslikeC(BigDecimal feelslikeC) {
    this.feelslikeC = feelslikeC;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getFeelslikeF() {
    return feelslikeF;
  }
  public void setFeelslikeF(BigDecimal feelslikeF) {
    this.feelslikeF = feelslikeF;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getVisKm() {
    return visKm;
  }
  public void setVisKm(BigDecimal visKm) {
    this.visKm = visKm;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getVisMiles() {
    return visMiles;
  }
  public void setVisMiles(BigDecimal visMiles) {
    this.visMiles = visMiles;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getUv() {
    return uv;
  }
  public void setUv(Integer uv) {
    this.uv = uv;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getGustMph() {
    return gustMph;
  }
  public void setGustMph(BigDecimal gustMph) {
    this.gustMph = gustMph;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getGustKph() {
    return gustKph;
  }
  public void setGustKph(BigDecimal gustKph) {
    this.gustKph = gustKph;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public CurrentAirQuality getAirQuality() {
    return airQuality;
  }
  public void setAirQuality(CurrentAirQuality airQuality) {
    this.airQuality = airQuality;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Current current = (Current) o;
    return (this.lastUpdatedEpoch == null ? current.lastUpdatedEpoch == null : this.lastUpdatedEpoch.equals(current.lastUpdatedEpoch)) &&
        (this.lastUpdated == null ? current.lastUpdated == null : this.lastUpdated.equals(current.lastUpdated)) &&
        (this.tempC == null ? current.tempC == null : this.tempC.equals(current.tempC)) &&
        (this.tempF == null ? current.tempF == null : this.tempF.equals(current.tempF)) &&
        (this.isDay == null ? current.isDay == null : this.isDay.equals(current.isDay)) &&
        (this.condition == null ? current.condition == null : this.condition.equals(current.condition)) &&
        (this.windMph == null ? current.windMph == null : this.windMph.equals(current.windMph)) &&
        (this.windKph == null ? current.windKph == null : this.windKph.equals(current.windKph)) &&
        (this.windDegree == null ? current.windDegree == null : this.windDegree.equals(current.windDegree)) &&
        (this.windDir == null ? current.windDir == null : this.windDir.equals(current.windDir)) &&
        (this.pressureMb == null ? current.pressureMb == null : this.pressureMb.equals(current.pressureMb)) &&
        (this.pressureIn == null ? current.pressureIn == null : this.pressureIn.equals(current.pressureIn)) &&
        (this.precipMm == null ? current.precipMm == null : this.precipMm.equals(current.precipMm)) &&
        (this.precipIn == null ? current.precipIn == null : this.precipIn.equals(current.precipIn)) &&
        (this.humidity == null ? current.humidity == null : this.humidity.equals(current.humidity)) &&
        (this.cloud == null ? current.cloud == null : this.cloud.equals(current.cloud)) &&
        (this.feelslikeC == null ? current.feelslikeC == null : this.feelslikeC.equals(current.feelslikeC)) &&
        (this.feelslikeF == null ? current.feelslikeF == null : this.feelslikeF.equals(current.feelslikeF)) &&
        (this.visKm == null ? current.visKm == null : this.visKm.equals(current.visKm)) &&
        (this.visMiles == null ? current.visMiles == null : this.visMiles.equals(current.visMiles)) &&
        (this.uv == null ? current.uv == null : this.uv.equals(current.uv)) &&
        (this.gustMph == null ? current.gustMph == null : this.gustMph.equals(current.gustMph)) &&
        (this.gustKph == null ? current.gustKph == null : this.gustKph.equals(current.gustKph)) &&
        (this.airQuality == null ? current.airQuality == null : this.airQuality.equals(current.airQuality));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.lastUpdatedEpoch == null ? 0: this.lastUpdatedEpoch.hashCode());
    result = 31 * result + (this.lastUpdated == null ? 0: this.lastUpdated.hashCode());
    result = 31 * result + (this.tempC == null ? 0: this.tempC.hashCode());
    result = 31 * result + (this.tempF == null ? 0: this.tempF.hashCode());
    result = 31 * result + (this.isDay == null ? 0: this.isDay.hashCode());
    result = 31 * result + (this.condition == null ? 0: this.condition.hashCode());
    result = 31 * result + (this.windMph == null ? 0: this.windMph.hashCode());
    result = 31 * result + (this.windKph == null ? 0: this.windKph.hashCode());
    result = 31 * result + (this.windDegree == null ? 0: this.windDegree.hashCode());
    result = 31 * result + (this.windDir == null ? 0: this.windDir.hashCode());
    result = 31 * result + (this.pressureMb == null ? 0: this.pressureMb.hashCode());
    result = 31 * result + (this.pressureIn == null ? 0: this.pressureIn.hashCode());
    result = 31 * result + (this.precipMm == null ? 0: this.precipMm.hashCode());
    result = 31 * result + (this.precipIn == null ? 0: this.precipIn.hashCode());
    result = 31 * result + (this.humidity == null ? 0: this.humidity.hashCode());
    result = 31 * result + (this.cloud == null ? 0: this.cloud.hashCode());
    result = 31 * result + (this.feelslikeC == null ? 0: this.feelslikeC.hashCode());
    result = 31 * result + (this.feelslikeF == null ? 0: this.feelslikeF.hashCode());
    result = 31 * result + (this.visKm == null ? 0: this.visKm.hashCode());
    result = 31 * result + (this.visMiles == null ? 0: this.visMiles.hashCode());
    result = 31 * result + (this.uv == null ? 0: this.uv.hashCode());
    result = 31 * result + (this.gustMph == null ? 0: this.gustMph.hashCode());
    result = 31 * result + (this.gustKph == null ? 0: this.gustKph.hashCode());
    result = 31 * result + (this.airQuality == null ? 0: this.airQuality.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Current {\n");
    
    sb.append("  lastUpdatedEpoch: ").append(lastUpdatedEpoch).append("\n");
    sb.append("  lastUpdated: ").append(lastUpdated).append("\n");
    sb.append("  tempC: ").append(tempC).append("\n");
    sb.append("  tempF: ").append(tempF).append("\n");
    sb.append("  isDay: ").append(isDay).append("\n");
    sb.append("  condition: ").append(condition).append("\n");
    sb.append("  windMph: ").append(windMph).append("\n");
    sb.append("  windKph: ").append(windKph).append("\n");
    sb.append("  windDegree: ").append(windDegree).append("\n");
    sb.append("  windDir: ").append(windDir).append("\n");
    sb.append("  pressureMb: ").append(pressureMb).append("\n");
    sb.append("  pressureIn: ").append(pressureIn).append("\n");
    sb.append("  precipMm: ").append(precipMm).append("\n");
    sb.append("  precipIn: ").append(precipIn).append("\n");
    sb.append("  humidity: ").append(humidity).append("\n");
    sb.append("  cloud: ").append(cloud).append("\n");
    sb.append("  feelslikeC: ").append(feelslikeC).append("\n");
    sb.append("  feelslikeF: ").append(feelslikeF).append("\n");
    sb.append("  visKm: ").append(visKm).append("\n");
    sb.append("  visMiles: ").append(visMiles).append("\n");
    sb.append("  uv: ").append(uv).append("\n");
    sb.append("  gustMph: ").append(gustMph).append("\n");
    sb.append("  gustKph: ").append(gustKph).append("\n");
    sb.append("  airQuality: ").append(airQuality).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
