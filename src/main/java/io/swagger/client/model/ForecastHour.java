/**
 * Weather API
 * # Introduction WeatherAPI.com provides access to weather and geo data via a JSON/XML restful API. It allows developers to create desktop, web and mobile applications using this data very easy. We provide following data through our API:     - Real-time weather - 14 day weather forecast - Historical Weather - Marine Weather and Tide Data - Future Weather (Upto 365 days ahead) - Daily and hourly intervals - 15 min interval (Enterprise only) - Astronomy - Time zone - Location data - Sports - Search or Autocomplete API - Weather Alerts - Air Quality Data - Bulk Request  # Getting Started    You need to [signup](https://www.weatherapi.com/signup.aspx) and then you can find your API key under [your account](https://www.weatherapi.com/login.aspx), and start using API right away!  Try our weather API by using interactive [API Explorer](https://www.weatherapi.com/api-explorer.aspx).  We also have SDK for popular framework/languages available on [Github](https://github.com/weatherapicom/) for quick integrations.  If you find any features missing or have any suggestions, please [contact us](https://www.weatherapi.com/contact.aspx).    # Authentication    API access to the data is protected by an API key. If at anytime, you find the API key has become vulnerable, please regenerate the key using Regenerate button next to the API key.    Authentication to the WeatherAPI.com API is provided by passing your API key as request parameter through an API .      ##  key parameter  key=YOUR API KEY  
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import io.swagger.client.model.ForecastCondition;
import java.math.BigDecimal;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class ForecastHour {
  
  @SerializedName("time_epoch")
  private Integer timeEpoch = null;
  @SerializedName("time")
  private String time = null;
  @SerializedName("temp_c")
  private BigDecimal tempC = null;
  @SerializedName("temp_f")
  private BigDecimal tempF = null;
  @SerializedName("is_day")
  private Integer isDay = null;
  @SerializedName("condition")
  private ForecastCondition condition = null;
  @SerializedName("wind_mph")
  private BigDecimal windMph = null;
  @SerializedName("wind_kph")
  private BigDecimal windKph = null;
  @SerializedName("wind_degree")
  private BigDecimal windDegree = null;
  @SerializedName("wind_dir")
  private String windDir = null;
  @SerializedName("pressure_mb")
  private BigDecimal pressureMb = null;
  @SerializedName("pressure_in")
  private BigDecimal pressureIn = null;
  @SerializedName("precip_mm")
  private BigDecimal precipMm = null;
  @SerializedName("precip_in")
  private BigDecimal precipIn = null;
  @SerializedName("humidity")
  private BigDecimal humidity = null;
  @SerializedName("cloud")
  private BigDecimal cloud = null;
  @SerializedName("feelslike_c")
  private BigDecimal feelslikeC = null;
  @SerializedName("feelslike_f")
  private BigDecimal feelslikeF = null;
  @SerializedName("windchill_c")
  private BigDecimal windchillC = null;
  @SerializedName("windchill_f")
  private BigDecimal windchillF = null;
  @SerializedName("heatindex_c")
  private BigDecimal heatindexC = null;
  @SerializedName("heatindex_f")
  private BigDecimal heatindexF = null;
  @SerializedName("dewpoint_c")
  private BigDecimal dewpointC = null;
  @SerializedName("dewpoint_f")
  private BigDecimal dewpointF = null;
  @SerializedName("will_it_rain")
  private Integer willItRain = null;
  @SerializedName("chance_of_rain")
  private BigDecimal chanceOfRain = null;
  @SerializedName("will_it_snow")
  private Integer willItSnow = null;
  @SerializedName("chance_of_snow")
  private BigDecimal chanceOfSnow = null;
  @SerializedName("vis_km")
  private BigDecimal visKm = null;
  @SerializedName("vis_miles")
  private BigDecimal visMiles = null;
  @SerializedName("gust_mph")
  private BigDecimal gustMph = null;
  @SerializedName("gust_kph")
  private BigDecimal gustKph = null;
  @SerializedName("uv")
  private Integer uv = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getTimeEpoch() {
    return timeEpoch;
  }
  public void setTimeEpoch(Integer timeEpoch) {
    this.timeEpoch = timeEpoch;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTime() {
    return time;
  }
  public void setTime(String time) {
    this.time = time;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getTempC() {
    return tempC;
  }
  public void setTempC(BigDecimal tempC) {
    this.tempC = tempC;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getTempF() {
    return tempF;
  }
  public void setTempF(BigDecimal tempF) {
    this.tempF = tempF;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getIsDay() {
    return isDay;
  }
  public void setIsDay(Integer isDay) {
    this.isDay = isDay;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ForecastCondition getCondition() {
    return condition;
  }
  public void setCondition(ForecastCondition condition) {
    this.condition = condition;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getWindMph() {
    return windMph;
  }
  public void setWindMph(BigDecimal windMph) {
    this.windMph = windMph;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getWindKph() {
    return windKph;
  }
  public void setWindKph(BigDecimal windKph) {
    this.windKph = windKph;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getWindDegree() {
    return windDegree;
  }
  public void setWindDegree(BigDecimal windDegree) {
    this.windDegree = windDegree;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getWindDir() {
    return windDir;
  }
  public void setWindDir(String windDir) {
    this.windDir = windDir;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getPressureMb() {
    return pressureMb;
  }
  public void setPressureMb(BigDecimal pressureMb) {
    this.pressureMb = pressureMb;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getPressureIn() {
    return pressureIn;
  }
  public void setPressureIn(BigDecimal pressureIn) {
    this.pressureIn = pressureIn;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getPrecipMm() {
    return precipMm;
  }
  public void setPrecipMm(BigDecimal precipMm) {
    this.precipMm = precipMm;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getPrecipIn() {
    return precipIn;
  }
  public void setPrecipIn(BigDecimal precipIn) {
    this.precipIn = precipIn;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getHumidity() {
    return humidity;
  }
  public void setHumidity(BigDecimal humidity) {
    this.humidity = humidity;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getCloud() {
    return cloud;
  }
  public void setCloud(BigDecimal cloud) {
    this.cloud = cloud;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getFeelslikeC() {
    return feelslikeC;
  }
  public void setFeelslikeC(BigDecimal feelslikeC) {
    this.feelslikeC = feelslikeC;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getFeelslikeF() {
    return feelslikeF;
  }
  public void setFeelslikeF(BigDecimal feelslikeF) {
    this.feelslikeF = feelslikeF;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getWindchillC() {
    return windchillC;
  }
  public void setWindchillC(BigDecimal windchillC) {
    this.windchillC = windchillC;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getWindchillF() {
    return windchillF;
  }
  public void setWindchillF(BigDecimal windchillF) {
    this.windchillF = windchillF;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getHeatindexC() {
    return heatindexC;
  }
  public void setHeatindexC(BigDecimal heatindexC) {
    this.heatindexC = heatindexC;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getHeatindexF() {
    return heatindexF;
  }
  public void setHeatindexF(BigDecimal heatindexF) {
    this.heatindexF = heatindexF;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getDewpointC() {
    return dewpointC;
  }
  public void setDewpointC(BigDecimal dewpointC) {
    this.dewpointC = dewpointC;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getDewpointF() {
    return dewpointF;
  }
  public void setDewpointF(BigDecimal dewpointF) {
    this.dewpointF = dewpointF;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getWillItRain() {
    return willItRain;
  }
  public void setWillItRain(Integer willItRain) {
    this.willItRain = willItRain;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getChanceOfRain() {
    return chanceOfRain;
  }
  public void setChanceOfRain(BigDecimal chanceOfRain) {
    this.chanceOfRain = chanceOfRain;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getWillItSnow() {
    return willItSnow;
  }
  public void setWillItSnow(Integer willItSnow) {
    this.willItSnow = willItSnow;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getChanceOfSnow() {
    return chanceOfSnow;
  }
  public void setChanceOfSnow(BigDecimal chanceOfSnow) {
    this.chanceOfSnow = chanceOfSnow;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getVisKm() {
    return visKm;
  }
  public void setVisKm(BigDecimal visKm) {
    this.visKm = visKm;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getVisMiles() {
    return visMiles;
  }
  public void setVisMiles(BigDecimal visMiles) {
    this.visMiles = visMiles;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getGustMph() {
    return gustMph;
  }
  public void setGustMph(BigDecimal gustMph) {
    this.gustMph = gustMph;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public BigDecimal getGustKph() {
    return gustKph;
  }
  public void setGustKph(BigDecimal gustKph) {
    this.gustKph = gustKph;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getUv() {
    return uv;
  }
  public void setUv(Integer uv) {
    this.uv = uv;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ForecastHour forecastHour = (ForecastHour) o;
    return (this.timeEpoch == null ? forecastHour.timeEpoch == null : this.timeEpoch.equals(forecastHour.timeEpoch)) &&
        (this.time == null ? forecastHour.time == null : this.time.equals(forecastHour.time)) &&
        (this.tempC == null ? forecastHour.tempC == null : this.tempC.equals(forecastHour.tempC)) &&
        (this.tempF == null ? forecastHour.tempF == null : this.tempF.equals(forecastHour.tempF)) &&
        (this.isDay == null ? forecastHour.isDay == null : this.isDay.equals(forecastHour.isDay)) &&
        (this.condition == null ? forecastHour.condition == null : this.condition.equals(forecastHour.condition)) &&
        (this.windMph == null ? forecastHour.windMph == null : this.windMph.equals(forecastHour.windMph)) &&
        (this.windKph == null ? forecastHour.windKph == null : this.windKph.equals(forecastHour.windKph)) &&
        (this.windDegree == null ? forecastHour.windDegree == null : this.windDegree.equals(forecastHour.windDegree)) &&
        (this.windDir == null ? forecastHour.windDir == null : this.windDir.equals(forecastHour.windDir)) &&
        (this.pressureMb == null ? forecastHour.pressureMb == null : this.pressureMb.equals(forecastHour.pressureMb)) &&
        (this.pressureIn == null ? forecastHour.pressureIn == null : this.pressureIn.equals(forecastHour.pressureIn)) &&
        (this.precipMm == null ? forecastHour.precipMm == null : this.precipMm.equals(forecastHour.precipMm)) &&
        (this.precipIn == null ? forecastHour.precipIn == null : this.precipIn.equals(forecastHour.precipIn)) &&
        (this.humidity == null ? forecastHour.humidity == null : this.humidity.equals(forecastHour.humidity)) &&
        (this.cloud == null ? forecastHour.cloud == null : this.cloud.equals(forecastHour.cloud)) &&
        (this.feelslikeC == null ? forecastHour.feelslikeC == null : this.feelslikeC.equals(forecastHour.feelslikeC)) &&
        (this.feelslikeF == null ? forecastHour.feelslikeF == null : this.feelslikeF.equals(forecastHour.feelslikeF)) &&
        (this.windchillC == null ? forecastHour.windchillC == null : this.windchillC.equals(forecastHour.windchillC)) &&
        (this.windchillF == null ? forecastHour.windchillF == null : this.windchillF.equals(forecastHour.windchillF)) &&
        (this.heatindexC == null ? forecastHour.heatindexC == null : this.heatindexC.equals(forecastHour.heatindexC)) &&
        (this.heatindexF == null ? forecastHour.heatindexF == null : this.heatindexF.equals(forecastHour.heatindexF)) &&
        (this.dewpointC == null ? forecastHour.dewpointC == null : this.dewpointC.equals(forecastHour.dewpointC)) &&
        (this.dewpointF == null ? forecastHour.dewpointF == null : this.dewpointF.equals(forecastHour.dewpointF)) &&
        (this.willItRain == null ? forecastHour.willItRain == null : this.willItRain.equals(forecastHour.willItRain)) &&
        (this.chanceOfRain == null ? forecastHour.chanceOfRain == null : this.chanceOfRain.equals(forecastHour.chanceOfRain)) &&
        (this.willItSnow == null ? forecastHour.willItSnow == null : this.willItSnow.equals(forecastHour.willItSnow)) &&
        (this.chanceOfSnow == null ? forecastHour.chanceOfSnow == null : this.chanceOfSnow.equals(forecastHour.chanceOfSnow)) &&
        (this.visKm == null ? forecastHour.visKm == null : this.visKm.equals(forecastHour.visKm)) &&
        (this.visMiles == null ? forecastHour.visMiles == null : this.visMiles.equals(forecastHour.visMiles)) &&
        (this.gustMph == null ? forecastHour.gustMph == null : this.gustMph.equals(forecastHour.gustMph)) &&
        (this.gustKph == null ? forecastHour.gustKph == null : this.gustKph.equals(forecastHour.gustKph)) &&
        (this.uv == null ? forecastHour.uv == null : this.uv.equals(forecastHour.uv));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.timeEpoch == null ? 0: this.timeEpoch.hashCode());
    result = 31 * result + (this.time == null ? 0: this.time.hashCode());
    result = 31 * result + (this.tempC == null ? 0: this.tempC.hashCode());
    result = 31 * result + (this.tempF == null ? 0: this.tempF.hashCode());
    result = 31 * result + (this.isDay == null ? 0: this.isDay.hashCode());
    result = 31 * result + (this.condition == null ? 0: this.condition.hashCode());
    result = 31 * result + (this.windMph == null ? 0: this.windMph.hashCode());
    result = 31 * result + (this.windKph == null ? 0: this.windKph.hashCode());
    result = 31 * result + (this.windDegree == null ? 0: this.windDegree.hashCode());
    result = 31 * result + (this.windDir == null ? 0: this.windDir.hashCode());
    result = 31 * result + (this.pressureMb == null ? 0: this.pressureMb.hashCode());
    result = 31 * result + (this.pressureIn == null ? 0: this.pressureIn.hashCode());
    result = 31 * result + (this.precipMm == null ? 0: this.precipMm.hashCode());
    result = 31 * result + (this.precipIn == null ? 0: this.precipIn.hashCode());
    result = 31 * result + (this.humidity == null ? 0: this.humidity.hashCode());
    result = 31 * result + (this.cloud == null ? 0: this.cloud.hashCode());
    result = 31 * result + (this.feelslikeC == null ? 0: this.feelslikeC.hashCode());
    result = 31 * result + (this.feelslikeF == null ? 0: this.feelslikeF.hashCode());
    result = 31 * result + (this.windchillC == null ? 0: this.windchillC.hashCode());
    result = 31 * result + (this.windchillF == null ? 0: this.windchillF.hashCode());
    result = 31 * result + (this.heatindexC == null ? 0: this.heatindexC.hashCode());
    result = 31 * result + (this.heatindexF == null ? 0: this.heatindexF.hashCode());
    result = 31 * result + (this.dewpointC == null ? 0: this.dewpointC.hashCode());
    result = 31 * result + (this.dewpointF == null ? 0: this.dewpointF.hashCode());
    result = 31 * result + (this.willItRain == null ? 0: this.willItRain.hashCode());
    result = 31 * result + (this.chanceOfRain == null ? 0: this.chanceOfRain.hashCode());
    result = 31 * result + (this.willItSnow == null ? 0: this.willItSnow.hashCode());
    result = 31 * result + (this.chanceOfSnow == null ? 0: this.chanceOfSnow.hashCode());
    result = 31 * result + (this.visKm == null ? 0: this.visKm.hashCode());
    result = 31 * result + (this.visMiles == null ? 0: this.visMiles.hashCode());
    result = 31 * result + (this.gustMph == null ? 0: this.gustMph.hashCode());
    result = 31 * result + (this.gustKph == null ? 0: this.gustKph.hashCode());
    result = 31 * result + (this.uv == null ? 0: this.uv.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastHour {\n");
    
    sb.append("  timeEpoch: ").append(timeEpoch).append("\n");
    sb.append("  time: ").append(time).append("\n");
    sb.append("  tempC: ").append(tempC).append("\n");
    sb.append("  tempF: ").append(tempF).append("\n");
    sb.append("  isDay: ").append(isDay).append("\n");
    sb.append("  condition: ").append(condition).append("\n");
    sb.append("  windMph: ").append(windMph).append("\n");
    sb.append("  windKph: ").append(windKph).append("\n");
    sb.append("  windDegree: ").append(windDegree).append("\n");
    sb.append("  windDir: ").append(windDir).append("\n");
    sb.append("  pressureMb: ").append(pressureMb).append("\n");
    sb.append("  pressureIn: ").append(pressureIn).append("\n");
    sb.append("  precipMm: ").append(precipMm).append("\n");
    sb.append("  precipIn: ").append(precipIn).append("\n");
    sb.append("  humidity: ").append(humidity).append("\n");
    sb.append("  cloud: ").append(cloud).append("\n");
    sb.append("  feelslikeC: ").append(feelslikeC).append("\n");
    sb.append("  feelslikeF: ").append(feelslikeF).append("\n");
    sb.append("  windchillC: ").append(windchillC).append("\n");
    sb.append("  windchillF: ").append(windchillF).append("\n");
    sb.append("  heatindexC: ").append(heatindexC).append("\n");
    sb.append("  heatindexF: ").append(heatindexF).append("\n");
    sb.append("  dewpointC: ").append(dewpointC).append("\n");
    sb.append("  dewpointF: ").append(dewpointF).append("\n");
    sb.append("  willItRain: ").append(willItRain).append("\n");
    sb.append("  chanceOfRain: ").append(chanceOfRain).append("\n");
    sb.append("  willItSnow: ").append(willItSnow).append("\n");
    sb.append("  chanceOfSnow: ").append(chanceOfSnow).append("\n");
    sb.append("  visKm: ").append(visKm).append("\n");
    sb.append("  visMiles: ").append(visMiles).append("\n");
    sb.append("  gustMph: ").append(gustMph).append("\n");
    sb.append("  gustKph: ").append(gustKph).append("\n");
    sb.append("  uv: ").append(uv).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
