/**
 * Weather API
 * # Introduction WeatherAPI.com provides access to weather and geo data via a JSON/XML restful API. It allows developers to create desktop, web and mobile applications using this data very easy. We provide following data through our API:     - Real-time weather - 14 day weather forecast - Historical Weather - Marine Weather and Tide Data - Future Weather (Upto 365 days ahead) - Daily and hourly intervals - 15 min interval (Enterprise only) - Astronomy - Time zone - Location data - Sports - Search or Autocomplete API - Weather Alerts - Air Quality Data - Bulk Request  # Getting Started    You need to [signup](https://www.weatherapi.com/signup.aspx) and then you can find your API key under [your account](https://www.weatherapi.com/login.aspx), and start using API right away!  Try our weather API by using interactive [API Explorer](https://www.weatherapi.com/api-explorer.aspx).  We also have SDK for popular framework/languages available on [Github](https://github.com/weatherapicom/) for quick integrations.  If you find any features missing or have any suggestions, please [contact us](https://www.weatherapi.com/contact.aspx).    # Authentication    API access to the data is protected by an API key. If at anytime, you find the API key has become vulnerable, please regenerate the key using Regenerate button next to the API key.    Authentication to the WeatherAPI.com API is provided by passing your API key as request parameter through an API .      ##  key parameter  key=YOUR API KEY  
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class AlertsAlert {
  
  @SerializedName("headline")
  private String headline = null;
  @SerializedName("msgtype")
  private String msgtype = null;
  @SerializedName("severity")
  private String severity = null;
  @SerializedName("urgency")
  private String urgency = null;
  @SerializedName("areas")
  private String areas = null;
  @SerializedName("category")
  private String category = null;
  @SerializedName("certainty")
  private String certainty = null;
  @SerializedName("event")
  private String event = null;
  @SerializedName("note")
  private String note = null;
  @SerializedName("effective")
  private Date effective = null;
  @SerializedName("expires")
  private Date expires = null;
  @SerializedName("desc")
  private String desc = null;
  @SerializedName("instruction")
  private String instruction = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getHeadline() {
    return headline;
  }
  public void setHeadline(String headline) {
    this.headline = headline;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMsgtype() {
    return msgtype;
  }
  public void setMsgtype(String msgtype) {
    this.msgtype = msgtype;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getSeverity() {
    return severity;
  }
  public void setSeverity(String severity) {
    this.severity = severity;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getUrgency() {
    return urgency;
  }
  public void setUrgency(String urgency) {
    this.urgency = urgency;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getAreas() {
    return areas;
  }
  public void setAreas(String areas) {
    this.areas = areas;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCategory() {
    return category;
  }
  public void setCategory(String category) {
    this.category = category;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCertainty() {
    return certainty;
  }
  public void setCertainty(String certainty) {
    this.certainty = certainty;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getEvent() {
    return event;
  }
  public void setEvent(String event) {
    this.event = event;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getNote() {
    return note;
  }
  public void setNote(String note) {
    this.note = note;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEffective() {
    return effective;
  }
  public void setEffective(Date effective) {
    this.effective = effective;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getExpires() {
    return expires;
  }
  public void setExpires(Date expires) {
    this.expires = expires;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDesc() {
    return desc;
  }
  public void setDesc(String desc) {
    this.desc = desc;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getInstruction() {
    return instruction;
  }
  public void setInstruction(String instruction) {
    this.instruction = instruction;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertsAlert alertsAlert = (AlertsAlert) o;
    return (this.headline == null ? alertsAlert.headline == null : this.headline.equals(alertsAlert.headline)) &&
        (this.msgtype == null ? alertsAlert.msgtype == null : this.msgtype.equals(alertsAlert.msgtype)) &&
        (this.severity == null ? alertsAlert.severity == null : this.severity.equals(alertsAlert.severity)) &&
        (this.urgency == null ? alertsAlert.urgency == null : this.urgency.equals(alertsAlert.urgency)) &&
        (this.areas == null ? alertsAlert.areas == null : this.areas.equals(alertsAlert.areas)) &&
        (this.category == null ? alertsAlert.category == null : this.category.equals(alertsAlert.category)) &&
        (this.certainty == null ? alertsAlert.certainty == null : this.certainty.equals(alertsAlert.certainty)) &&
        (this.event == null ? alertsAlert.event == null : this.event.equals(alertsAlert.event)) &&
        (this.note == null ? alertsAlert.note == null : this.note.equals(alertsAlert.note)) &&
        (this.effective == null ? alertsAlert.effective == null : this.effective.equals(alertsAlert.effective)) &&
        (this.expires == null ? alertsAlert.expires == null : this.expires.equals(alertsAlert.expires)) &&
        (this.desc == null ? alertsAlert.desc == null : this.desc.equals(alertsAlert.desc)) &&
        (this.instruction == null ? alertsAlert.instruction == null : this.instruction.equals(alertsAlert.instruction));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.headline == null ? 0: this.headline.hashCode());
    result = 31 * result + (this.msgtype == null ? 0: this.msgtype.hashCode());
    result = 31 * result + (this.severity == null ? 0: this.severity.hashCode());
    result = 31 * result + (this.urgency == null ? 0: this.urgency.hashCode());
    result = 31 * result + (this.areas == null ? 0: this.areas.hashCode());
    result = 31 * result + (this.category == null ? 0: this.category.hashCode());
    result = 31 * result + (this.certainty == null ? 0: this.certainty.hashCode());
    result = 31 * result + (this.event == null ? 0: this.event.hashCode());
    result = 31 * result + (this.note == null ? 0: this.note.hashCode());
    result = 31 * result + (this.effective == null ? 0: this.effective.hashCode());
    result = 31 * result + (this.expires == null ? 0: this.expires.hashCode());
    result = 31 * result + (this.desc == null ? 0: this.desc.hashCode());
    result = 31 * result + (this.instruction == null ? 0: this.instruction.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertsAlert {\n");
    
    sb.append("  headline: ").append(headline).append("\n");
    sb.append("  msgtype: ").append(msgtype).append("\n");
    sb.append("  severity: ").append(severity).append("\n");
    sb.append("  urgency: ").append(urgency).append("\n");
    sb.append("  areas: ").append(areas).append("\n");
    sb.append("  category: ").append(category).append("\n");
    sb.append("  certainty: ").append(certainty).append("\n");
    sb.append("  event: ").append(event).append("\n");
    sb.append("  note: ").append(note).append("\n");
    sb.append("  effective: ").append(effective).append("\n");
    sb.append("  expires: ").append(expires).append("\n");
    sb.append("  desc: ").append(desc).append("\n");
    sb.append("  instruction: ").append(instruction).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
